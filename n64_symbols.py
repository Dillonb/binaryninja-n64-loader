from binaryninja import BinaryView, Symbol, SymbolType

STATIC_CODE_SYMBOLS = [
    Symbol(SymbolType.FunctionSymbol, 0x1FC00000, "pifMain"),
    Symbol(SymbolType.FunctionSymbol, 0xA4000040, "bootMain"),
]

# Symbol(sym_type, addr, short_name, full_name=None, raw_name=None, binding=None, namespace=None, ordinal=0)
EXTERN_SYMBOLS = [
    Symbol(SymbolType.ExternalSymbol, 0xA3f00000, "RDRAM_CONFIG"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00004, "RDRAM_DEVICE_ID"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00008, "RDRAM_DELAY"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f0000C, "RDRAM_MODE"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00010, "RDRAM_REF_INTERVAL"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00014, "RDRAM_REF_ROW"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00018, "RDRAM_RAS_INTERVAL"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f0001C, "RDRAM_MIN_INTERVAL"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00020, "RDRAM_ADDR_SELECT"),
    Symbol(SymbolType.ExternalSymbol, 0xA3f00024, "RDRAM_DEVICE_MANUF"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040000, "SP_MEM_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040004, "SP_DRAM_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040008, "SP_RD_LEN"),
    Symbol(SymbolType.ExternalSymbol, 0xA404000C, "SP_WR_LEN"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040010, "SP_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040014, "SP_DMA_FULL"),
    Symbol(SymbolType.ExternalSymbol, 0xA4040018, "SP_DMA_BUSY"),
    Symbol(SymbolType.ExternalSymbol, 0xA404001C, "SP_SEMAPHORE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4080000, "SP_PC"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100000, "DCP_START"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100004, "DCP_END"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100008, "DCP_CURRENT"),
    Symbol(SymbolType.ExternalSymbol, 0xA410000c, "DCP_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100010, "DCP_CLOCK"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100014, "DCP_BUFBUSY"),
    Symbol(SymbolType.ExternalSymbol, 0xA4100018, "DCP_PIPEBUSY"),
    Symbol(SymbolType.ExternalSymbol, 0xA410001c, "DCP_START"),
    Symbol(SymbolType.ExternalSymbol, 0xA4300000, "MI_INIT_MODE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4300004, "MI_VERSION"),
    Symbol(SymbolType.ExternalSymbol, 0xA4300008, "MI_INTR"),
    Symbol(SymbolType.ExternalSymbol, 0xA430000C, "MI_INTR_MASK"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400000, "VI_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400004, "VI_ORIGIN"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400008, "VI_WIDTH"),
    Symbol(SymbolType.ExternalSymbol, 0xA440000C, "VI_INTR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400010, "VI_CURRENT"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400014, "VI_BURST"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400018, "VI_V_SYNC"),
    Symbol(SymbolType.ExternalSymbol, 0xA440001C, "VI_H_SYNC"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400020, "VI_LEAP"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400024, "VI_H_START"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400028, "VI_V_START"),
    Symbol(SymbolType.ExternalSymbol, 0xA440002C, "VI_V_BURST"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400030, "VI_X_SCALE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4400034, "VI_Y_SCALE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4500000, "AI_DRAM_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4500004, "AI_LEN"),
    Symbol(SymbolType.ExternalSymbol, 0xA4500008, "AI_CONTROL"),
    Symbol(SymbolType.ExternalSymbol, 0xA450000C, "AI_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4500010, "AI_DACRATE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4500014, "AI_BITRATE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600000, "PI_DRAM_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600004, "PI_CART_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600008, "PI_RD_LEN"),
    Symbol(SymbolType.ExternalSymbol, 0xA460000C, "PI_WR_LEN"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600010, "PI_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600014, "PI_BSD_DOM1_LAT"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600018, "PI_BSD_DOM1_PWD"),
    Symbol(SymbolType.ExternalSymbol, 0xA460001C, "PI_BSD_DOM1_PGS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600020, "PI_BSD_DOM1_RLS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600024, "PI_BSD_DOM2_LAT"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600028, "PI_BSD_DOM2_PWD"),
    Symbol(SymbolType.ExternalSymbol, 0xA460002C, "PI_BSD_DOM2_PGS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4600030, "PI_BSD_DOM2_RLS"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700000, "RI_MODE"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700004, "RI_CONFIG"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700008, "RI_CURRENT_LOAD"),
    Symbol(SymbolType.ExternalSymbol, 0xA470000C, "RI_SELECT"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700010, "RI_REFRESH"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700014, "RI_LATENCY"),
    Symbol(SymbolType.ExternalSymbol, 0xA4700018, "RI_RERROR"),
    Symbol(SymbolType.ExternalSymbol, 0xA470001C, "RI_WERROR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4800000, "SI_DRAM_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA4800004, "SI_PIF_ADDR_RD64B_REG"),
    Symbol(SymbolType.ExternalSymbol, 0xA4800010, "SI_PIF_ADDR_WR64B_REG"),
    Symbol(SymbolType.ExternalSymbol, 0xA4800018, "SI_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000500, "ASIC_DATA"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000504, "ASIC_MISC_REG"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000508, "ASIC_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA500050C, "ASIC_CUR_TK"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000510, "ASIC_BM_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000514, "ASIC_ERR_SECTOR"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000518, "ASIC_SEQ_STATUS"),
    Symbol(SymbolType.ExternalSymbol, 0xA500051C, "ASIC_CUR_SECTOR"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000520, "ASIC_HARD_RESET"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000524, "ASIC_C1_SO"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000528, "ASIC_HOST_SECBYTE"),
    Symbol(SymbolType.ExternalSymbol, 0xA500052C, "ASIC_C1_S2"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000530, "ASIC_SEC_BYTE"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000534, "ASIC_C1_S4"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000538, "ASIC_C1_S6"),
    Symbol(SymbolType.ExternalSymbol, 0xA500053C, "ASIC_CUR_ADDR"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000540, "ASIC_ID_REG"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000544, "ASIC_TEST_REG"),
    Symbol(SymbolType.ExternalSymbol, 0xA5000548, "ASIC_TEST_PIN_SEL"),
    Symbol(SymbolType.ExternalSymbol, 0x80000000, "TLB_REFILL"),
    Symbol(SymbolType.ExternalSymbol, 0x80000080, "XTLB_REFILL"),
    Symbol(SymbolType.ExternalSymbol, 0x80000100, "CACHE_ERROR"),
    Symbol(SymbolType.ExternalSymbol, 0x80000180, "GEN_EXCEPTION"),
    Symbol(SymbolType.ExternalSymbol, 0x80000300, "NTSC_PAL"),
    Symbol(SymbolType.ExternalSymbol, 0x80000304, "CART_DD"),
    Symbol(SymbolType.ExternalSymbol, 0x80000308, "ROM_BASE"),
    Symbol(SymbolType.ExternalSymbol, 0x8000030c, "RESET"),
    Symbol(SymbolType.ExternalSymbol, 0x80000310, "CIC_ID"),
    Symbol(SymbolType.ExternalSymbol, 0x80000314, "VERSION"),
    Symbol(SymbolType.ExternalSymbol, 0x80000318, "RDRAM_SIZE"),
    Symbol(SymbolType.ExternalSymbol, 0x8000031c, "NMI_BUFFER"),
]

def define_n64_symbols(bv: BinaryView, load_address: int):
    # Define our static code and data symbols
    for code_sym in STATIC_CODE_SYMBOLS + EXTERN_SYMBOLS:
        bv.define_auto_symbol(code_sym)

    # Explicitly add function symbol at load address (start of ram)
    bv.define_auto_symbol(Symbol(SymbolType.FunctionSymbol, load_address, "ramMain"))

